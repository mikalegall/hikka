package espoo;
/*
Spring Data (käyttää Hibernate & Java Persistence API)
* Autogeneroitu DAO-kerros (interface --> repository)
Interface'in perusteella Spring luo uuden Beanin, jonka avulla tietokantaa voi käyttää Entity-olioiden (Java-luokkien) avulla
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-data-jpa</artifactId>
</dependency>
*/

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;


// Tarjotaan REST-rajapinta
// https://spring.io/guides/tutorials/react-and-spring-data-rest/
@RestController
public class Controller1 {

    @Autowired // This means to get the bean called RaakaaineRepository which is auto-generated by Spring, we will use it to handle the data
    private RaakaaineRepository sapuskarepo;

    // R(ead) GET: Haku
/*
    @RequestMapping(value = "rajapinta/safka", method = RequestMethod.GET)  <-- Jäljempänä oleva @GetMapping (uudempi tapa) korvaa tämän
    @ResponseBody <-- tuota ei tarvita, koska aiemmin on ilmoitettu @RestController, joka sisältää sekä @Controller että @ResponseBody
*/
    @GetMapping("safka")
    public Iterable<Ruoka> haeKaikkiRuokaAnnokset() {

        return sapuskarepo.findAll();
    }

    @GetMapping("safka/{id}")
    public Ruoka haeTiettyPaiva(@PathVariable Integer id) {

        return sapuskarepo.findOne(id);
    }


    // C(reate) POST: Uuden tiedon syöttö
/*
    @RequestMapping(value = "rajapinta/safka", method = RequestMethod.POST)  <-- Jäljempänä oleva @PostMapping (uudempi tapa) korvaa tämän
*/
    @PostMapping("safka")
    public void lisaaYksiLounas(@RequestBody Ruoka lounas) {

        sapuskarepo.save(lounas);
    }

/*

    // U(pdate) PUT: Päivitys
    @PutMapping("safka/{id}")
    public void paivitaYhtaLounasta(@PathVariable("sapuskaId") int id, @RequestBody Ruoka lounas) {

   }


    // D(elete) DELETE: Poisto
    @DeleteMapping("/safka")
    public ResponseEntity poistaPaivanAnnos(@PathVariable("sapuskaId") int id) {

        return null;
    }
*/


}
